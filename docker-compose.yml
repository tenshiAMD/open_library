version: "3.7"
services:
  web:
    image: asia.gcr.io/open-library-243008/angel:latest
    deploy:
      replicas: 3
      restart_policy:
        condition: on-failure
    command: >
      bin/foreman start -f Procfile-web
    environment:
      - RAILS_MASTER_KEY=${WEB_RAILS_MASTER_KEY}
      - HEALTH_CHECK_AUTH=${WEB_HEALTH_CHECK_AUTH}
      - DB_HOST=${DB_HOST}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - ELASTICSEARCH_URL=${ELASTICSEARCH_URL}
      - REDIS_URL=${REDIS_URL}
    depends_on:
      - redis
      - postgresql
      - elasticsearch
    networks:
      - back_tier
    ports:
      - ${WEB_RAILS_PORT}:80
  postgresql:
    image: sameersbn/postgresql:latest
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    environment:
      - PG_PASSWORD=${DB_PASSWORD}
    networks:
      - back_tier
    volumes:
      - ./docker/data/postgresql:/var/lib/postgresql
  elasticsearch:
    image: elasticsearch:6.7.2
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    environment:
      - discovery.type=single-node
    networks:
      - back_tier
    volumes:
      - ./docker/data/elasticsearch:/usr/share/elasticsearch/data
  redis:
    image: tenshiamd/redis:5-alpine
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    command: redis-server
    networks:
      - back_tier
    volumes:
      - ./docker/data/redis:/var/lib/redis
  worker:
    image: asia.gcr.io/open-library-243008/angel:latest
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
    command: >
      bash -c "mkdir -p tmp/pids && bin/foreman start -f Procfile-worker"
    environment:
      - RAILS_MASTER_KEY=${WEB_RAILS_MASTER_KEY}
#      - HEALTH_CHECK_AUTH=${WORKER_HEALTH_CHECK_AUTH}
      - DB_HOST=${DB_HOST}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - ELASTICSEARCH_URL=${ELASTICSEARCH_URL}
      - REDIS_URL=${REDIS_URL}
    depends_on:
      - elasticsearch
      - postgresql
      - redis
    networks:
      - back_tier
networks:
  back_tier:
    driver: bridge
  front_tier:
    driver: bridge
